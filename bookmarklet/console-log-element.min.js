!function(){if(!document.getElementById("script_firefox-extension-console-log-element")){var n=document.createElement("script");n.id="script_firefox-extension-console-log-element",n.innerHTML='\n\n (function () {\n\n var elementAlreadyExists = document.getElementById(\n "firefox-extension-console-log-element"\n );\n var widgetDefaultStyle =\n "all: initial; z-index: 99999 !important; padding: 0 !important; position: fixed !important; bottom: 0 !important; visibility: visible; font-family: avenir, arial, tahoma, monospace !important; font-size: 1.5rem !important; margin-left: 5px !important; transition: 0.25s !important;";\n if (elementAlreadyExists) {\n elementAlreadyExists.hidden = false;\n elementAlreadyExists.style = widgetDefaultStyle;\n elementAlreadyExists.scrollIntoView();\n document\n .getElementById("inputBox_firefox-extension-console-log-element")\n .focus();\n return;\n }\n\n var lastInput = "";\n\n var darkMode = "background: #333; color: lime;";\n var defaultStyle =\n darkMode + "padding: 0.3rem !important; border: none !important;";\n var inputBoxDefaultStyle =\n defaultStyle +\n "margin-right: 0 !important; border-radius: 0.2rem 0 0 0.2rem !important; background: black;";\n var inputButtonDefaultStyle =\n defaultStyle +\n "margin-left: 0 !important; border-radius: 0 0.2rem 0.2rem 0 !important;";\n var inputHoverStyle = "background: lime; color: black !important;";\n\n var inputGroupDiv = document.createElement("div");\n inputGroupDiv.id = "inputGroup_firefox-extension-console-log-element";\n inputGroupDiv.style =\n "border-radius: 0.3rem !important; display: grid !important; grid-template: auto %2F auto 15ch; border: 2px solid lightgrey !important; padding: 0 !important;";\n\n var inputBox = createInputBox();\n var inputButton = createInputButton();\n var consoleOutput = createConsoleOutput();\n var theWholeThingDiv = createConsoleLogWidget();\n\n inputBox.focus();\n\n var isFromInterface = false;\n\n redefineConsoleActions();\n\n function redefineConsoleActions() {\n var oldConsoleLog = console.log;\n var oldConsoleInfo = console.info;\n var oldConsoleWarn = console.warn;\n var oldConsoleError = console.error;\n var oldConsoleDebug = console.debug;\n\n console.log = function () {\n oldConsoleLog.call(console, ...arguments);\n if (isFromInterface) outputToWidget(arguments[0]);\n isFromInterface = false;\n };\n console.info = function () {\n oldConsoleInfo.call(console, ...arguments);\n if (isFromInterface) outputToWidget(arguments[0]);\n isFromInterface = false;\n };\n console.warn = function () {\n oldConsoleWarn.call(console, ...arguments);\n if (isFromInterface) outputToWidget(arguments[0]);\n isFromInterface = false;\n };\n console.error = function () {\n oldConsoleError.call(console, ...arguments);\n if (isFromInterface) outputToWidget(arguments[0]);\n isFromInterface = false;\n };\n console.debug = function () {\n oldConsoleDebug.call(console, ...arguments);\n if (isFromInterface) outputToWidget(arguments[0]);\n isFromInterface = false;\n };\n }\n\n function outputToWidget(input) {\n var temp = document.getElementById("firefox-extension-console-log-element");\n document.getElementById("firefox-extension-console-log-element").remove();\n var output = "";\n try {\n output = eval(input);\n if (isElement(output)) {\n output = output.outerHTML.replace(%2F<%2Fg, "&lt;").replace(%2F\\%2F%2Fg, "%2F");\n } else if (typeof output === "object") {\n output = JSON.stringify(output, null, 4);\n } else if (typeof output === "string") {\n output = output.replace(%2F<%2Fg, "&lt;").replace(%2F\\%2F%2Fg, "%2F");\n }\n input = String(input).replace(%2F<%2Fg, "&lt;").replace(%2F\\%2F%2Fg, "%2F");\n consoleOutput.innerHTML +=\n \'<button style="background: black; color: lime; text-align: left;" onclick="document.getElementById(\\\'inputBox_firefox-extension-console-log-element\\\').value=this.innerText;">\' +\n input +\n "<%2Fbutton><br%2F>" +\n \'<span style="background: black; color: white;">\' +\n output +\n "<%2Fspan><br%2F><br%2F>";\n clearInput();\n } catch(e) {\n inputBox.value = input;\n updateInputRows();\n consoleOutput.innerHTML +=\n \'<span style="background: black; color: lime;">\' +\n input +\n "<%2Fspan><br%2F>" +\n \'<span style="background: black; color: white;">\' +\n "<small><em>" + e + "<%2Fem><%2Fsmall>" +\n "<%2Fspan><br%2F><br%2F>";\n makeInputGroupWobble();\n }\n document.body.appendChild(temp);\n inputBox.focus();\n }\n\n function createInputBox() {\n var inputBox = document.createElement("textarea");\n inputBox.id = "inputBox_firefox-extension-console-log-element";\n inputBox.placeholder = "console log input here";\n inputBox.title = "enter x to hide this widget";\n inputBox.style = inputBoxDefaultStyle;\n inputBox.setAttribute("autocapitalize", "none");\n inputBox.setAttribute("rows", 1);\n inputBox.onkeyup = function (event) {\n var holdingShiftOrCtrl = event.shiftKey === true || event.ctrlKey === true;\n var hitEnter = event.key === "Enter" || event.keyCode === 13;\n var hitDelete = event.key === "Delete" || event.keyCode === 8 || event.keyCode === 46;\n var hitArrowUp = event.key === "ArrowUp" || event.keyCode === 38;\n if (holdingShiftOrCtrl && hitEnter) {\n triggerInputToConsole();\n } else if (hitEnter || hitDelete) {\n updateInputRows();\n } else if (inputBox.value === "" && hitArrowUp) {\n enterLastInput();\n }\n };\n inputBox.onmouseenter = function () {\n inputBox.style = inputBoxDefaultStyle + inputHoverStyle;\n inputBox.focus();\n };\n inputBox.onmouseleave = function () {\n inputBox.style = inputBoxDefaultStyle;\n };\n return inputBox;\n }\n\n function createInputButton() {\n var inputButton = document.createElement("button");\n inputButton.id = "inputButton_firefox-extension-console-log-element";\n inputButton.innerText = "Send command";\n inputButton.title = "enter x to hide this widget";\n inputButton.style = inputButtonDefaultStyle;\n inputButton.onclick = function () {\n triggerInputToConsole();\n updateInputRows();\n inputBox.focus();\n };\n inputButton.onmouseenter = function () {\n inputButton.style = inputButtonDefaultStyle + inputHoverStyle;\n if (inputBox.value === "") {\n inputBox.focus();\n }\n };\n inputButton.onmouseleave = function () {\n inputButton.style = inputButtonDefaultStyle;\n };\n inputButton.onfocus = function () {\n inputButton.style = inputButtonDefaultStyle + inputHoverStyle;\n };\n inputButton.onblur = function () {\n inputButton.style = inputButtonDefaultStyle;\n };\n return inputButton;\n }\n\n function createConsoleOutput() {\n var defaultOutputStyle = \n "margin-top: 1px !important; max-height: 100px !important; overflow: scroll !important; width: 90vw !important; background: black !important; color: white !important; border: none !important; border-radius: 0.3rem !important; padding: 5px !important;";\n var consoleOutput = document.createElement("pre");\n consoleOutput.id = "output_firefox-extension-console-log-element";\n consoleOutput.style = defaultOutputStyle;\n consoleOutput.onclick = function (e) {\n if (e.target !== consoleOutput) return;\n var expandedHeight = "90vh";\n var shouldCollapse = (consoleOutput.style.height === expandedHeight || consoleOutput.innerText === "");\n if (shouldCollapse) {\n consoleOutput.style = defaultOutputStyle;\n } else {\n consoleOutput.style.height = "90vh";\n consoleOutput.style.maxHeight = "90vh";\n consoleOutput.style.opacity = 0.9;\n }\n };\n return consoleOutput;\n }\n\n function createConsoleLogWidget() {\n var theWholeThingDiv = document.createElement("div");\n theWholeThingDiv.id = "firefox-extension-console-log-element";\n theWholeThingDiv.style = widgetDefaultStyle + "visibility: hidden;";\n inputGroupDiv.appendChild(inputBox);\n inputGroupDiv.appendChild(inputButton);\n theWholeThingDiv.appendChild(inputGroupDiv);\n theWholeThingDiv.appendChild(consoleOutput);\n document.body.appendChild(theWholeThingDiv);\n return theWholeThingDiv;\n }\n\n function isElement(element) {\n return (\n element &&\n (element instanceof Element || element instanceof HTMLDocument)\n );\n }\n\n function updateInputRows() {\n var newLineCharCount = (inputBox.value.match(%2F\\n%2Fg) || []).length;\n inputBox.setAttribute("rows", 1 + newLineCharCount);\n }\n\n function triggerInputToConsole() {\n var consoleInput = inputBox.value;\n if (consoleInput === "") makeInputGroupWobble();\n try {\n inputToConsole(consoleInput);\n } catch (e) {\n makeInputGroupWobble();\n }\n }\n\n function inputToConsole(stringInput) {\n stringInput = stringInput.trim();\n lastInput = stringInput;\n if (stringInput === "") return;\n if (handledClear(stringInput) || handledCustomCommandX(stringInput)) {\n return;\n }\n\n isFromInterface = true;\n console.log(stringInput);\n consoleOutput.scrollTop = consoleOutput.scrollHeight;\n consoleOutput.scrollIntoView();\n }\n\n function handledClear(stringInput) {\n if (stringInput === "clear()") {\n consoleOutput.innerHTML = "";\n clearInput();\n return true;\n }\n return false;\n }\n\n function handledCustomCommandX(stringInput) {\n stringInput = stringInput.toLowerCase();\n if (\n stringInput === "x" ||\n stringInput === \'"x"\' ||\n stringInput === "\'x\'"\n ) {\n var confirmed = confirm("Do you want to hide this console log widget?");\n if (!confirmed) return false;\n theWholeThingDiv.hidden = true;\n theWholeThingDiv.style = widgetDefaultStyle + "visibility: hidden;";\n return true;\n }\n return false;\n }\n\n function clearInput() {\n inputBox.value = "";\n }\n\n function makeInputGroupWobble() {\n var wobbleCss = document.createTextNode(`.wobble {\n animation: wobble 0.5s;\n }\n @keyframes wobble {\n 0% { transform: rotate(-3deg); }\n 50% {transform: rotate(3deg); }\n 100% { transform: rotate(0deg); }\n }`);\n\n var styleAlreadyExists = document.getElementById("wobble-css");\n if (!styleAlreadyExists) {\n var style = document.createElement("style");\n style.id = "wobble-css";\n style.type = "text%2Fcss";\n style.appendChild(wobbleCss);\n document.body.appendChild(style);\n }\n\n inputGroupDiv.classList.add("wobble");\n setTimeout(() => {\n inputGroupDiv.classList.remove("wobble");\n }, 500);\n }\n\n function enterLastInput() {\n inputBox.value = lastInput;\n }\n\n function $(selector, el) {\n if (!el) {\n el = document;\n }\n return el.querySelector(selector);\n }\n\n function $$(selector, el) {\n if (!el) {\n el = document;\n }\n return el.querySelectorAll(selector);\n }\n })();\n ',document.body.appendChild(n)}}(),function(){var n=document.getElementById("firefox-extension-console-log-element");n.hidden=!1,n.style="all: initial; z-index: 99999 !important; padding: 0 !important; position: fixed !important; bottom: 0 !important; left: 0 !important; visibility: visible; font-family: avenir, arial, tahoma, monospace !important; font-size: 16px !important; margin-left: 5px !important; transition: 0.25s !important;",n.scrollIntoView();var t=document.getElementById("inputBox_firefox-extension-console-log-element");t.value="",t.setAttribute("rows",1),setTimeout(()=>{t.focus()},100)}();
